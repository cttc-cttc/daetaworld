<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.deataworld.adminMapper">

	<!-- 전체 구직자 수 -->
	<select id="employeeCnt" resultType="java.lang.Integer">
		select count(*) from member
		where m_type = 1
	</select>
	
	<!-- 구직자 회원 조회(페이징 처리) -->
	<select id="employeeList" resultType="MemberDTO">
		select
			m_id,	<!-- ID -->
			m_nick,	<!-- 닉네임 -->
			date(m_regdate) as m_regdate, <!-- 가입일 -->
			m_warned,	<!-- 경고상태 -->
			m_number	<!-- 회원 번호(상세정보) -->
		from member
		where m_type = 1
		order by m_number desc
		limit #{pageStart}, #{pagePerList}
	</select>
	
	<!-- 전체 구인자 수 -->
	<select id="employerCnt" resultType="java.lang.Integer">
		select count(*) from member
		where m_type = 2
	</select>
	
	<!-- 구인자 회원 조회(페이징 처리) -->
	<select id="employerList" resultType="MemberDTO">
		select
			m_id,	<!-- ID -->
			m_nick,	<!-- 닉네임 -->
			date(m_regdate) as m_regdate, <!-- 가입일 -->
			m_warned,	<!-- 경고상태 -->
			m_number	<!-- 회원 번호(상세정보) -->
		from member
		where m_type = 2
		order by m_number desc
		limit #{pageStart}, #{pagePerList}
	</select>
	
	<!-- 전체 블랙리스트 수 -->
	<select id="blacklistCnt" resultType="java.lang.Integer">
		select count(*) from member
		where m_banned = 1
	</select>
	
	<!-- 블랙리스트 조회(페이징 처리) -->
	<select id="blacklist" resultType="BlacklistDTO">
		select
			A.m_id,		<!-- A.회원 ID -->
			A.m_nick,	<!-- A.회원 닉네임 -->
			date(A.m_regdate) as m_regdate, <!-- A.회원 가입날짜 -->
			group_concat(D.r_type) as r_types, <!-- D.신고사유 -->
			group_concat(C.c_number) as c_numbers, <!-- C.해당 댓글번호 -->
			A.m_number,	<!-- A.회원 번호 -->
			A.m_type	<!-- A.회원 구분 -->
		from member as A <!-- 회원 테이블A -->
		inner join comments_report as B	<!-- 댓글 신고 테이블B -->
			on A.m_id = B.m_id
		inner join comments as C	<!-- 댓글 테이블C -->
			on B.c_number = C.c_number
		inner join report_code as D	<!-- 신고 코드 테이블D -->
			on C.r_code = D.r_code
		where A.m_banned = 1
		group by A.m_id
		order by A.m_number desc
		limit #{pageStart}, #{pagePerList}
	</select>
	
	<!-- 전체 구인공고 신고 수 -->
	<select id="jobAdsCnt" resultType="java.lang.Integer">
		select count(*) from job_ads
		where
			r_code is not null
			and del = 0
	</select>
	
	<!-- 구인공고 신고 조회(페이징 처리) -->
	<select id="jobAds" resultType="JobAdsReportDTO">
		select
			B.s_name,	<!-- B.가게명 -->
			A.m_id,		<!-- A.작성자 -->
			date(B.s_date) as s_date,	<!-- B.작성일 -->
			D.r_type,	<!-- D.신고 타입 -->
			A.a_number,	<!-- A.공고 번호 -->
			C.re_number	<!-- C.공고 신고 번호 -->
		from job_ads as A <!-- 구인공고 테이블A -->
		inner join shop_info as B <!-- 가게정보 테이블B -->
			on A.s_number = B.s_number
		inner join report as C <!-- 글 신고 테이블C -->
			on A.a_number = C.a_number
		inner join report_code as D <!-- 신고 코드 테이블D -->
			on A.r_code = d.r_code
		where
			A.r_code is not null
			and C.del = 0
		limit #{pageStart}, #{pagePerList}
	</select>
	
	<!-- 신고된 구인공고 삭제 -->
	<update id="warnJobAds" parameterType="java.lang.Integer">
		update job_ads as A, member as B, report as C
		set
			A.del = 1,
			B.m_warned = if(B.m_warned = 3, 3, B.m_warned + 1),
			B.m_banned = if(B.m_warned = 2, 1, 0),
		    C.del = 1
		where
			A.a_number = #{a_number}
		    and A.m_id = B.m_id
		    and C.a_number = #{a_number}
	</update>
	
	<!-- 신고된 구인공고 취소 -->
	<update id="cancelJobAds" parameterType="java.lang.Integer">
		update job_ads as A, report as B
		set
			A.r_code = null,
			B.del = 1
		where
			B.re_number = #{re_number}
		    and A.a_number = B.a_number
	</update>
	
	<!-- 전체 자유게시판 글 신고 수 -->
	<select id="freeBoardCnt" resultType="java.lang.Integer">
		select count(*) from board
		where
			b_code = 0
			and r_code is not null
			and del = 0
	</select>
	
	<!-- 자유게시판 글 신고 조회(페이징 처리) -->
	<select id="freeBoard" resultType="FreeBoardReportDTO">
		select
			A.b_title,	<!-- A.게시글 제목 -->
			A.m_id,		<!-- A.회원 ID(작성자) -->
			date(A.b_date) as b_date,	<!-- A.게시글 작성 날짜 -->
			C.r_type,	<!-- C.신고 타입 -->
			A.b_number,	<!-- A.게시글 번호 -->
			B.re_number,<!-- B.글 신고 번호 -->
			D.m_type	<!-- D.회원 구분 -->
		from board as A <!-- 게시판 테이블A -->
		inner join report as B <!-- 글 신고 테이블B -->
			on A.b_number = B.b_number
		inner join report_code as C <!-- 신고 코드 테이블C -->
			on A.r_code = C.r_code
		inner join member as D <!-- 회원 테이블D -->
			on A.m_id = D.m_id
		where A.r_code is not null
		and A.del = 0
		limit #{pageStart}, #{pagePerList}
	</select>
	
</mapper>