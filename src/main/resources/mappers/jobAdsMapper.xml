<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.deataworld.jobAds">

	<!-- 메인화면 - 긴급구인 리스트 6개 -->
	<select id="main_urgency_ads" resultType="java.util.Map">
		select
			A.a_number,		<!-- A구인공고.공고번호 -->
			A.a_wage,		<!-- A구인공고.시급 -->
			B.s_name,		<!-- B가게정보.가게명 -->
			B.s_number,		<!-- B가게정보.가게 번호 -->
			B.s_address1,	<!-- B가게정보.가게 주소1 -->
			B.s_picture1,	<!-- B가게정보.가게 사진1 -->
			C.m_id,			<!-- C회원.아이디 -->
			if(D.w_rate is null, <!-- w_rate가 null이면(처음 공고등록한 사장님이면) -->
				0.0, <!-- 별점을 0.0으로 표시 -->
		        format(round(avg(D.w_rate), 1), 1) <!-- 아니면 평균 별점 표시 -->
		    ) as w_rate <!-- D후기.평점 -->
		from job_ads as A
		inner join shop_info as B
			on A.s_number = B.s_number
		inner join member as C
			on A.m_id = C.m_id
		left outer join review as D
			on A.m_id = D.w_writer
		where
			A.a_urgency = 1
			and (A.a_status = 0 or A.a_status = 1)
		group by A.a_number
		order by A.a_number desc
		limit 0, 6
	</select>

	<!-- 메인화면 - 일반구인 리스트 6개 -->
	<select id="main_common_ads" resultType="java.util.Map">
		select
			A.a_number,		<!-- A구인공고.공고번호 -->
			A.a_wage,		<!-- A구인공고.시급 -->
			A.a_time,		<!-- A구인공고.시간 -->
			<!-- A구인공고.올린시간 -->
			    <![CDATA[
			    case
					when hour(timediff(now(), A.ua_date)) < 1
						then concat(timestampdiff(minute, A.ua_date, now()),'분')
					when hour(timediff(now(), A.ua_date)) < 24
						then concat(timestampdiff(hour, A.ua_date, now()),'시간')
					when hour(timediff(now(), A.ua_date)) < 168
						then concat(timestampdiff(day, A.ua_date, now()),'일')
					when hour(timediff(now(), A.ua_date)) < 720
						then concat(timestampdiff(week, A.ua_date, now()),'주')
					when datediff(now(), A.ua_date) < 365
						then concat(timestampdiff(month, A.ua_date, now()),'개월')
					else concat(timestampdiff(year, A.ua_date, now()),'년')
				end as uptime,
				]]>
			B.s_name,		<!-- B가게정보.가게명 -->
			B.s_number,		<!-- B가게정보.가게 번호 -->
			B.s_address1,	<!-- B가게정보.가게 주소1 -->
			B.s_picture1,	<!-- B가게정보.가게 사진1 -->
			B.s_tag1,		<!-- B가게정보.태그1 -->
			B.s_tag2,		<!-- B가게정보.태그2 -->
			B.s_tag3,		<!-- B가게정보.태그3 -->
			B.s_tag4,		<!-- B가게정보.태그4 -->
			B.s_tag5,		<!-- B가게정보.태그5 -->
			C.m_nick,		<!-- C회원.닉네임 -->
			C.m_id,			<!-- C회원.아이디 -->
			if(D.w_rate is null, <!-- w_rate가 null이면(처음 공고등록한 사장님이면) -->
				0.0, <!-- 별점을 0.0으로 표시 -->
		        format(round(avg(D.w_rate), 1), 1) <!-- 아니면 평균 별점 표시 -->
		    ) as w_rate <!-- D후기.평점 -->
		from job_ads as A
		inner join shop_info as B
			on A.s_number = B.s_number
		inner join member as C
			on A.m_id = C.m_id
		left outer join review as D
			on A.m_id = D.w_writer
		where
			A.a_urgency = 0
			and (A.a_status = 0 or A.a_status = 1)
		group by A.a_number
		order by A.a_number desc
		limit 0, 6

	</select>
	<!-- 일반 구인목록 -->
	<select id="listAds" parameterType="java.util.Map" resultType="Map">
		<![CDATA[ 
		select a.*, s.*
		from job_ads a, shop_info s
		where a.a_urgency = 0
		and a.a_status not in (3,4)
		and a.s_number = s.s_number
		and s.j_code not in (18)
		and left(a.a_date ,10) >date_format(curdate(), '%m/%d/%Y')
		order by a.a_number desc
		limit #{pageStart}, #{perPageNum}
		]]>
	</select>

	<!-- 급구 구인목록 -->
	<select id="listUrgency" parameterType="java.util.Map" resultType="Map">
	<![CDATA[ 
		select a.*, s.*
		from job_ads a, shop_info s
		where a.a_urgency = 1
		and a.a_status not in (3,4)
		and a.s_number = s.s_number
		and s.j_code not in (18)
		and left(a.a_date ,10) >date_format(curdate(), '%m/%d/%Y')
		order by a.a_number desc
		limit #{pageStart}, #{perPageNum}
	]]>

	</select>



	<!-- 농어촌 구인목록 -->
	<select id="listCountry" parameterType="java.util.Map" resultType="Map">
		<![CDATA[ 
		select a.*, s.*
		from job_ads a, shop_info s
		where a_status not in(3,4)
		and job_code = 18
		and a.s_number = s.s_number
		and left(a.a_date ,10) >date_format(curdate(), '%m/%d/%Y')
		order by a.a_number desc
		limit
		#{pageStart}, #{perPageNum}
		]]>
	</select>

	<!-- 구인 상단 검색 -->
	<select id = "listJobAdsSearch" parameterType="java.util.Map" resultType="Map">
		<![CDATA[
		SELECT si.* , ja.* 
		from shop_info si , job_ads ja
		where si.s_number = ja.s_number
		and si.a_code = #{a_code}
		and si.j_code = #{j_code}
		and ja.a_urgency = #{a_urgency}
		and left(ja.a_date ,10) >date_format(curdate(), '%m/%d/%Y')
		]]>
		
	</select>


	<!-- 구인상세 -->
	<select id="listDetail" parameterType="Map" resultType="Map">
		select j.*,s.*
		from job_ads j, shop_info s
		where j.s_number = s.s_number
		and 
		s.s_number = #{s_number}
		and left(j.a_date ,10) >date_format(curdate(), '%m/%d/%Y')

	</select> 

	<!-- 일반/긴급/농어촌 글 갯수 -->
		<select id="countJobAdsList" resultType="java.lang.Integer">
			select count(*)
			from job_ads
			where job_code = 18
			
		</select>	
		
	
	
	

	<!-- 직업추천 구인 목록검색 -->
	<select id="favoriteSearch" parameterType="java.util.Map"
		resultType="JobAdsDTO">
		select *
		from job_ads
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="option == 's_number'">
				s_number
			</if>
			<if test="option == 'a_number'">
				a_number
			</if>
			<if test="option == 'a_wage'">
				a_wage
			</if>
			<if test="option == 'job_code'">
				job_code
			</if>

			<if test="value != null and value != ''">
				= #{value}
			</if>
		</trim>
	</select>


	


	<!-- 직업추천 -->
	<!-- <select id="Recommendation" parameterType="java.util.Map" resultType="RecommendationDTO"> -->
	<!-- select * -->
	<!-- from shop_info -->
	<!-- <trim prefix="WHERE" prefixOverrides="AND|OR"> -->
	<!-- <if test="option == 'job_code'"> -->
	<!-- job_code</if> -->
	<!-- </trim> -->
	<!-- </select> -->

	<!-- 지역 카테고리1 목록 -->
	<select id="getAreaName1" resultType="java.lang.String">
		select a_name1 from
		area_code
		group by a_name1
	</select>
	<!-- 지역 카테고리2 목록 -->
	<select id="getAreaName2" parameterType="java.lang.String"
		resultType="java.util.Map">
		select a_code, a_name2
		from area_code
		where a_name1 =
		#{a_name1}
	</select>

	<!-- 직종 카테고리1 목록 -->
	<select id="getJob1" resultType="java.lang.String">
		select j_type1 from job_code
		group by j_type1
	</select>
	<!-- 직종 카테고리2 목록 -->
	<select id="getJob2" parameterType="java.lang.String"
		resultType="java.util.Map">
		select j_code, j_type2
		from job_code
		where j_type1 =
		#{j_type1}
	</select>
</mapper>