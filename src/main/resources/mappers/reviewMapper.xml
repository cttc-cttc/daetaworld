<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.deataworld.reviewMapper">

<!-- 구인자 -->
	<!-- 구인자 리뷰 작성 -->
	  	<insert id="r_reviewRegister" parameterType="ReviewDTO">
			insert into review (w_rate,w_comments,w_date,w_status,w_writer,id_rated,a_number)
			values (#{w_rate}, #{w_comments},now(),0,#{w_writer},#{id_rated},#{a_number})		
		</insert>
		
		<!-- 리뷰 작성 시 글 쓴 상태 변경 -->
		<update id="r_updateStatus" parameterType="Map">
			UPDATE job_apply
			SET jar_status = 7 
			WHERE (a_number = #{a_number} and m_id = #{m_id});	
		</update>
		
	<!-- 완료된 공고 목록보기 -->	
  	<select id="r_adsCompleted" parameterType="String" resultType="Map">
  		<![CDATA[	
  		select s.s_name, a.*, ja.*, m.m_nick, ja.m_id as id_rated
		from job_ads a, shop_info s, job_apply ja, member m
		where (left(a.a_date, 10) <= date_format(curdate(), '%m/%d/%Y') 
			or date_format(curdate(), '%Y') - substring(a.a_date, 7, 10) = 1) 
		and a.m_id = s.m_id and a.m_id = #{m_id}
		and a.s_number = s.s_number
		and a.a_number = ja.a_number
		and ja.m_id = m.m_id
		]]>
  	</select>
  	
  	<!-- 리뷰 작성한 공고 목록 -->
	<select id="r_wroteReviews" parameterType="String" resultType="Map">
		select ja.*, a.*, s.*, r.*, m.m_nick, date(r.w_date) as date
		from job_apply ja, job_ads a, shop_info s, review r, member m
		where ja.a_number = a.a_number 
		and a.s_number = s.s_number 
		and s.m_id = a.m_id 
		and r.a_number = a.a_number
		and a.m_id = r.w_writer and s.m_id = r.w_writer and r.w_writer = #{m_id} 
		and m.m_id = ja.m_id		
		and ja.jar_status = 7		
	</select>
	
	<!-- 리뷰 작성된 공고 목록-->
	<select id="r_writtenReviews" parameterType="String" resultType="Map">
		select ja.*, a.*, s.*, r.*, m.m_nick, date(r.w_date) as date
		from job_apply ja, job_ads a, shop_info s, review r, member m
		where ja.a_number = a.a_number 
		and a.s_number = s.s_number 
		and s.m_id = a.m_id 
		and r.a_number = a.a_number
		and a.m_id = r.id_rated and s.m_id = r.id_rated and r.id_rated = #{m_id}
		and m.m_id = r.w_writer
		and ja.jae_status = 7
	</select>
	
<!-- 구인자 끝 -->		
	
	
	
<!-- 구직자 -->

	<!-- 구직자 리뷰 작성 -->
	<insert id="e_reviewRegister" parameterType="ReviewDTO">
		insert into review
		(w_rate,w_comments,w_date,w_status,w_writer,id_rated,a_number)
		values
		(#{w_rate}, #{w_comments}, now(), 0, #{w_writer}, #{id_rated}, #{a_number})
	</insert>

	<!-- 리뷰 작성 시 글 쓴 상태 변경 -->
	<update id="e_updateStatus" parameterType="Map">
		UPDATE job_apply
		SET jae_status = 7
		WHERE (a_number = #{a_number} and m_id = #{m_id});
	</update>
		
	<!-- 내가 작성한 리뷰 보기 (가게이름을 받아야한다) -->
	<select id="e_writtenReviews" parameterType="String" resultType="Map">
		select r.*, s.s_name, date(r.w_date) as date  ,ja.jae_status, m.m_nick
    	from review r inner join job_ads a
		on r.a_number = a.a_number
        inner join member m
        on a.m_id = m.m_id
        inner join job_apply ja
		on ja.m_id = r.w_writer
        AND ja.jae_status = 7
        AND ja.a_number = a.a_number
		inner join shop_info s
		on a.s_number = s.s_number
		where r.w_writer = #{w_writer}
	</select>	

	<!-- 나를 평가한 리뷰 보기 -->
	<select id="e_myReview" parameterType="String" resultType="Map">
		select r.*, s.s_name, date(r.w_date) as date  ,ja.jae_status, m.m_nick
    	from review r
        inner join job_ads a
		on r.a_number = a.a_number
        inner join member m
        on a.m_id = m.m_id
        inner join job_apply ja
		on ja.m_id = r.id_rated
        and ja.jar_status = 7
        and ja.a_number = a.a_number
		inner join shop_info s
		on a.s_number = s.s_number
		where r.id_rated =#{id_rated}
	</select>	

<!-- 구직자 끝 -->
	
<!-- 공통 -->
	
	<!-- 작성한 리뷰 내용 확인 -->
	<select id="wroteDetail" parameterType="java.lang.Integer" resultType="Map">
		select r.*, rc.*
		from review r
			left outer join review_comments rc
			on r.w_number = rc.w_number
				and r.w_number = #{w_number}
		where r.w_number = #{w_number}
        or r.w_number = rc.w_number
	</select>
	
	<!-- 작성된 리뷰 내용 확인 -->
	<select id="writtenDetail" parameterType="java.lang.Integer" resultType="Map">
		select r.*, rc.*
		from review r
			left outer join review_comments rc
			on r.w_number = rc.w_number
				and r.w_number = #{w_number}
		where r.w_number = #{w_number}
        or r.w_number = rc.w_number
	</select>
	
	<!-- 리뷰 댓글 작성 -->
	<insert id="replyRegister" parameterType="ReviewCommentsDTO">
		insert into review_comments (rc_comment, rc_date, w_number, m_id)
		values (#{rc_comment}, now(), #{w_number}, #{m_id})	
	</insert>
	

</mapper>