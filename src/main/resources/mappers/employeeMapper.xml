<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.deataworld.employee">

<!-- 내 정보 불러오기(구직자) -->
<select id="myInfo" parameterType="String" resultType="Map">
	SELECT * FROM daetaworld.member
	WHERE m_type = '1' AND m_id = #{m_id};
</select>


<!-- 구직자 회원정보 수정 -->
<update id="myInfoUpdate" parameterType="MemberDTO">
	UPDATE daetaworld.member
	SET
	m_nick = #{m_nick},
	m_password = #{m_password},
	m_phone = #{m_phone},
	m_email = #{m_email},
	m_address1 = #{m_address1},
	m_address2 = #{m_address2},
	m_terms1 = #{m_terms1},
	m_terms2 = #{m_terms2},
	m_picture = #{m_picture},
	a_code = #{a_code}
	WHERE
	m_id = #{m_id} 
</update>

<!-- 등록된 자기소개서 목록 -->
<select id="resumeManagement" parameterType="String" resultType="ResumeDTO">
	SELECT * FROM daetaworld.employee_intro
	WHERE m_id = #{m_id}
</select>

<!-- 선택한 자소서 불러오기 -->
<select id="selectResume" parameterType="ResumeDTO" resultType="ResumeDTO">
	SELECT * FROM daetaworld.employee_intro
	WHERE m_id = #{m_id} AND i_number = #{i_number}
</select>

<!-- 수정한 자소서 저장 ajax -->
<update id="resumeUpdate" parameterType="ResumeDTO">
	UPDATE daetaworld.employee_intro
	SET
	i_title = #{i_title},
	i_contents = #{i_contents},
	i_date = now()
	WHERE
	m_id = #{m_id} AND i_number = #{i_number}
</update>

<!-- 자소서 삭제하기 -->
<delete id="resumeDelete" parameterType="ResumeDTO">
	DELETE FROM daetaworld.employee_intro
	WHERE
	i_number = #{i_number}
</delete>

<!-- 자소서 작성 -->
<insert id="resumeRegister" parameterType="ResumeDTO">
	INSERT INTO daetaworld.employee_intro
	(i_number, i_title, i_contents, i_default, i_date, m_id)
	VALUES(#{i_number}, #{i_title}, #{i_contents}, #{i_default}, now(), #{m_id})
</insert>

<!-- 대표 자소서 설정 -->
<update id="resumeDefault" parameterType="ResumeDTO">
	UPDATE daetaworld.employee_intro
	SET
	i_default = 1
	WHERE
	i_number = #{i_number}
</update>

<!-- 대표 자소서 초기화 -->
<update id="resumeDefaultInit" parameterType="ResumeDTO">
	UPDATE daetaworld.employee_intro
	SET
	i_default = '0'
	WHERE
	m_id = #{m_id} AND i_default = '1';
</update>


<!-- 공고 디테일 접속시 m_id와 a_number(공고번호) 를 이용해 이미 지원한 공고인지 확인 -->
<select id="applyCheck" parameterType="Map" resultType="java.lang.Integer" >
	select count(*) from job_apply
    join job_ads
    on job_apply.a_number = job_ads.a_number
    where
    job_apply.a_number = #{a_number} and job_apply.m_id = #{m_id}
</select>	


<!-- 대타신청 -->
<insert id="jobApply" parameterType="JobApplyDTO">
	insert into daetaworld.job_apply
	(ja_date, jar_status, jae_status, m_id, a_number, i_number)
	values
	(now(), 0, 0, #{m_id}, #{a_number}, 0)
</insert>


<!-- 신청시 대표자소서 저장시켜야함 (m_id를 보내서) -->
<update id="applyIntro" parameterType="JobApplyDTO">
	update job_apply
    join employee_intro
    on job_apply.m_id = employee_intro.m_id
    set job_apply.i_number = employee_intro.i_number
    where employee_intro.m_id = #{m_id} and employee_intro.i_default = '1';
</update>



<!-- 수정하자 job_ads 랑 shop_info 두개 다 불러와야함 Map으로 map.  -->
<!-- 대타 지원신청한 모든 공고내역을 가져옴 (종료된거, 신청한거, 요청온거,  -->
<select id="pinchHistory" parameterType="String" resultType="Map">
	SELECT a.*, s.*, ja.*
	FROM 
	job_ads a, shop_info s, job_apply ja
	WHERE
	ja.m_id = 'userTest' AND ja.a_number = a.a_number AND a.s_number = s.s_number AND ja.jae_status != 4;
</select>


<!-- 지원함, 확정정, 수락 알바목록 불어오기  -->
<select id="pinchStatus" parameterType="String"	resultType="Map">
	SELECT a.*, s.*, ja.*
	FROM 
	job_ads a, shop_info s, job_apply ja
	WHERE
	ja.m_id = #{m_id} AND (ja.jae_status ='0' or ja.jae_status = '1' or ja.jae_status = '2')
	AND ja.a_number = a.a_number AND a.s_number = s.s_number;
</select>

<!-- 종료된(완료한) 공고목록 불러오기 -->
<select id="pinchExpired" parameterType="String" resultType="Map">
	SELECT a.*, s.*, ja.*
	FROM job_ads a, shop_info s, job_apply ja
	WHERE
	ja.m_id = #{m_id} AND ja.a_number = a.a_number AND a.s_number = s.s_number AND a.a_status = '3';
</select>

<!-- (주변노예찾기)로 요청받은 공고목록 불러오기 -->
<select id="requests" parameterType="String" resultType="Map">
	select a.*, s.*, ja.*
	from 
	job_ads a, shop_info s, job_apply ja
	where 
	ja.m_id = #{m_id} AND ja.a_number = a.a_number AND a.s_number = s.s_number AND ja.jae_status = '4';
</select>

<!-- 요청받은 공고 상세정보 보기 -->
<select id="requestList" parameterType="Map" resultType="Map">
	SELECT ja.*, a.*, s.* from job_apply ja, job_ads a, shop_info s
	WHERE
	ja.m_id = #{m_id} AND ja.a_number = #{a_number} AND ja.a_number = a.a_number AND ja.jae_status = 4 AND a.s_number = s.s_number;
</select>


</mapper>
