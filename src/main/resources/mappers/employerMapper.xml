<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.deataworld.employerMapper">
	<!-- 내 정보보기 -->
	<select id="myInfo" parameterType="String" resultType="MemberDTO">
		select *
		from member
		where m_type = 2 and m_id = #{m_id}
	</select>
	
	<!-- 내 정보수정 -->
	<update id="myInfoUpdate" parameterType="MemberDTO">
		update member
		set m_nick = #{m_nick}, m_password = #{m_password}, m_phone = #{m_phone}, 
			m_address1 = #{m_address1}, m_address2 = #{m_address2}, 
			m_terms1 = #{m_terms1}, m_terms2 = #{m_terms2}, m_picture = #{m_picture},
			m_email = #{m_email}, a_code = #{a_code}
		where m_type = 2 and m_number = #{m_number}
	</update>
	
	<!-- 공고 등록 -->
	<insert id="adsRegister" parameterType="Map">
		insert into job_ads (a_date, a_time, a_wage, a_need, a_urgency, a_status, ua_date, a_type, m_id, r_code, s_number, del) 
		values (#{a_date}, #{a_time}, #{a_wage}, #{a_need}, #{a_urgency}, 0, now(), 0, #{m_id}, 0, #{s_number}, 0)
	</insert>
	
	<!-- 농어촌 공고 등록 -->
		<!-- shop_info에 등록 -->
		<insert id="countryShopRegister" parameterType="Map">
			insert into shop_info (s_name, s_address1, s_address2, s_picture1, s_picture2, s_picture3, s_intro, s_date, 
				s_tag1, s_tag2, s_tag3, s_tag4, s_tag5, m_id, a_code, j_code) 
			values (#{s_name}, #{s_address1}, #{s_address2}, #{s_picture1}, #{s_picture2}, #{s_picture3}, #{s_intro}, now(), 
				#{s_tag1}, #{s_tag2}, #{s_tag3}, #{s_tag4}, #{s_tag5}, #{m_id}, #{a_code}, 18)
				
		</insert>
		
		<!-- 등록된 s_number 갖고오기 -->
		<select id="getS_number" parameterType="Map" resultType="java.lang.Integer">
			select s_number
			from shop_info
			where s_name = #{s_name} and m_id = #{m_id} and j_code = 18
		</select>
		
		<!-- job_ads에 등록 -->
		<insert id="countryAdsRegister" parameterType="Map">
			insert into job_ads (a_date, a_time, a_wage, a_need, a_urgency, a_status, ua_date, 
				m_id, r_code, s_number, del, job_code)
			values (#{datefilter}, #{timefilter}, #{a_wage}, #{a_need}, #{a_urgency}, 0, now(), 
				#{m_id}, 0, #{s_number}, 0, 18)
		</insert>
	
	<!-- 주변 구직자 확인 전 가게 목록 -->
	<select id="checkEmployees" parameterType="String" resultType="Map">
		select s.*, a.*
		from shop_info s, job_ads a
		where s.m_id = a.m_id and s.m_id = #{m_id} 
		and a.s_number = s.s_number and a.a_status = 0
	</select>
	
	<!-- 가게의 주변 구직자 목록 -->
	<select id="nearCandidates" parameterType="String" resultType="MemberDTO">
		select *
		from member
		where a_code = #{areaCode} and m_type = 1 and m_terms1 = 1
	</select>
	
	<!-- 가게 주변 구직자 정보 -->
	<select id="nearCanDetail" parameterType="Map" resultType="Map">
		select m.*, i.*, a.*
		from member m, employee_intro i, job_ads a 
		where m.m_id = i.m_id and m.m_id = #{m_id} 
		and a.a_number = #{a_number} and i.i_default = 1  
	</select>
	
	<!-- 등록한 가게 목록보기 -->
	<select id="shopManagement" parameterType="String" resultType="ShopInfoDTO">
		select *
		from shop_info
		where m_id = #{m_id}
	</select>
	
	<!-- 등록한 가게 정보보기 -->
	<select id="shopInfo" parameterType="String" resultType="ShopInfoDTO">
		select *
		from shop_info
		where s_name = #{s_name}
	</select>
	
	<!-- 공고등록한 가게 목록보기 -->
	<select id="adsHistory" parameterType="String" resultType="Map">
		select j.*, s.s_name
		from job_ads j, shop_info s
		where j.s_number = s.s_number and j.m_id = #{m_id} and j.del = 0
	</select> 
	
	<!-- 가게 정보 -->
	<select id="adsRegistered" parameterType="java.lang.Integer" resultType="Map">
		select j.*, s.s_name
		from job_ads j, shop_info s
		where j.s_number = s.s_number and j.a_number = #{a_number} and j.del = 0
	</select> 
	
	<!-- 공고 업데이트 -->
	<update id="adsUpdate" parameterType="Map">
		update job_ads 
		set a_date = #{datefilter}, a_time= #{timefilter}, a_wage = #{a_wage}, 
			a_need = #{a_need}, a_urgency = #{a_urgency}, a_status = 0
		where (a_number = #{a_number}); 
	</update>
	
	<!-- 등록 중인 가게 목록보기 -->
	<select id="adsPending" parameterType="String" resultType="Map">
		select j.*, s.s_name
		from job_ads j, shop_info s
		where j.s_number = s.s_number and j.m_id = #{m_id} and j.a_status = 0 and j.del = 0
	</select>
	
	<!-- 지원받은 가게 및 구인완료된 가게 목록보기 -->
	<select id="adsApplied" parameterType="String" resultType="Map">
		select j.*, s.s_name
		from job_ads j, shop_info s
		where j.s_number = s.s_number and j.m_id = #{m_id} and (j.a_status = 1 or j.a_status = 2) and j.del = 0
	</select>
	
	<!-- 지원자 목록보기 -->
	<select id="candidates" parameterType="java.lang.Integer" resultType="Map">
		SELECT a.*, m.*
		FROM job_apply a, member m
		WHERE a.m_id = m.m_id AND a.a_number = #{a_number}
	</select>
	
	<!-- 지원자 정보보기 -->
	<select id="canDetail" parameterType="Map" resultType="Map">
		select m.*, i.*
		from member m, employee_intro i
		where m.m_id = i.m_id and m.m_id = #{m_id} and i.i_number= #{i_number} 
	</select>
	
	<!-- 알바 선요청 후 대기 -->
	<insert id="applyRequest" parameterType="Map">
		insert into job_apply (ja_date, jar_status, jae_status, m_id, a_number, i_number) 
		values (now(), 3, 4, #{m_id}, #{a_number}, #{i_number})
	</insert>
	
	<!-- 지원 수락 -->
	<update id="applyAccept" parameterType="String">
		update job_apply
		set jar_status = 1, jae_status = 1
		where m_id = #{m_id}
	</update>
	
	<!-- 지원 거절 -->
	<update id="applyDeny" parameterType="String">
		UPDATE job_apply
		SET jar_status = 2, jae_status = 3
		WHERE m_id = #{m_id}
	</update>
	
	<!-- 만료된 가게 목록보기 -->
	<select id="adsExpired" parameterType="String" resultType="Map">
		SELECT j.*, s.s_name
		FROM job_ads j, shop_info s
		WHERE j.s_number = s.s_number AND j.m_id = #{m_id} AND j.a_status = 4 AND j.del = 0
	</select>
	
	<!-- 직업 코드 목록보기 -->
	<select id="jobList" resultType="JobCodeDTO">
		select *
		from job_code
	</select>
	
	<!-- 등록한 가게 정보변경 -->
	<update id="shopInfoUpdate" parameterType="ShopInfoDTO">
		update shop_info
		set business_license = #{business_license}, s_name = #{s_name}, s_address1 = #{s_address1}, s_address2 = #{s_address2}, 
			s_picture1 = #{s_picture1}, s_picture2 = #{s_picture2}, s_picture3 = #{s_picture3}, s_intro = #{s_intro}, 
			s_tag1 = #{s_tag1}, s_tag2 = #{s_tag2}, s_tag3 = #{s_tag3}, s_tag4 = #{s_tag4}, s_tag5 = #{s_tag5}, 
			m_id = #{m_id}, a_code = #{a_code}, j_code = #{j_code}
		where s_number = #{s_number}
	</update>
	
	<!-- 가게 등록하기 -->
	<insert id="shopRegister" parameterType="ShopInfoDTO">
		insert into shop_info (business_license, s_name, s_address1, s_address2, s_picture1, s_picture2, s_picture3,  
			s_intro, s_date, s_tag1, s_tag2, s_tag3, s_tag4, s_tag5, del, m_id, a_code, j_code) 
		values (#{business_license}, #{s_name}, #{s_address1}, #{s_address2}, #{s_picture1}, #{s_picture2}, #{s_picture3},  
			#{s_intro}, now(), #{s_tag1}, #{s_tag2}, #{s_tag3}, #{s_tag4}, #{s_tag5}, 0, #{m_id}, #{a_code}, #{j_code})
	</insert>
	
</mapper>